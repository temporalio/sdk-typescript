name: Conventions

on:
  workflow_call:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  lint-and-prune:
    name: Lint and Prune
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Get NPM cache directory
        id: pnpm-cache-dir
        shell: bash
        run: echo "dir=$(pnpm store path)" >> ${GITHUB_OUTPUT}

      - name: Restore NPM cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ steps.pnpm-cache-dir.outputs.dir }}
          key: pnpm-main-linux-x64-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-main-linux-x64-

      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          version: '23.x'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upgrade Rust to latest stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Rust Cargo and Build cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: packages/core-bridge -> target
          prefix-key: corebridge-buildcache
          shared-key: linux-x64
          env-vars: ''
          save-if: false

      - name: Download dependencies
        run: |
          pnpm install --frozen-lockfile || pnpm install --frozen-lockfile || pnpm install --frozen-lockfile

      # eslint-import-resolver-typescript requires packages to be built
      - name: Compile all non-rust code
        run: pnpm run build --ignore @temporalio/core-bridge

      - run: pnpm run lint.check
      - run: pnpm run lint.prune
