name: Stress tests
on:
  workflow_call:
    inputs:
      test-type:
        required: true
        type: string
      test-timeout-minutes:
        required: true
        type: number

env:
  TEMPORAL_TESTING_LOG_DIR: /tmp/worker-logs

jobs:
  stress-test:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      # Don't build during install phase since we're going to explicitly build
      - run: npm ci --ignore-scripts
      - run: npm run build
        env:
          BUILD_CORE_RELEASE: true

      # docker-compose
      - name: Checkout docker-compose repo
        uses: actions/checkout@v2
        with:
          repository: temporalio/docker-compose
          path: docker-compose

      - name: Start Temporal Server
        run: docker-compose up -d
        working-directory: docker-compose

      - name: Wait for Temporal Server
        run: npm run wait-namespace
      # end:docker-compose

      - run: mkdir $TEMPORAL_TESTING_LOG_DIR
      - run: npm run ${{ github.event.inputs.test-type }}
        timeout-minutes: ${{ github.event.inputs.test-timeout-minutes }}

      # Tail the logs and upload as artifact on cancel or failure
      - run: mkdir $TEMPORAL_TESTING_LOG_DIR/tails && for f in $TEMPORAL_TESTING_LOG_DIR/*.log; do tail -20000 $f > $TEMPORAL_TESTING_LOG_DIR/tails/$(basename $f); done
        if: ${{ cancelled() || failure() }}
      - uses: actions/upload-artifact@v2
        if: ${{ cancelled() || failure() }}
        with:
          name: worker-logs
          path: $TEMPORAL_TESTING_LOG_DIR/tails

      # TODO: set up alerting
      # TODO: record test durations and other metrics like memory usage / cache utilization / CPU
